<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- 애노테이션을 이용하여 Spring 웹 애플리케이션을 구현할때 -->
	<!-- 필요한 객체들을 자동등록-->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 	<resources mapping="/resources/**" location="/resources/" /> -->

	<!-- 핸들러(컨트롤러)가 뷰이름을 반환한 경우, -->
	<!-- 	뷰이름의 앞에 "/WEB-INF/views/"를 붙이고, 뒤에 ".jsp"를 붙여서  -->
	<!-- 그 경로의 파일로 이동(forward)하도록 설정 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 	com.exam.exspring 패키지 아래에서 -->
	<!-- 	@Component,@Controller,@Service,@Repository 등의 애노테이션이 적용된 -->
	<!-- 	클래스들의 객체를 생성하여 스프링(객체컨테이너)에 자동 등록 -->
	<context:component-scan base-package="com.exam.exspring" />
	
	<interceptors> 
		<interceptor>
			<!--어떤경로로 요청이 왔을때 인터셉터를 실행할지 설정 -->
			<mapping path="/**"/>
            <!--인터셉터를 실행시키지 않을 경로 지정-->
            <exclude-mapping path="/member/login.do"/>
            <exclude-mapping path="/member/add.do"/>
			<!--실행할 인터셉터 클래스 등록 -->
            <beans:bean class="com.exam.exspring.member.LoginInterceptor"/>
		</interceptor>
	</interceptors>
<!-- 	데이터베이스 연결을 관리하는 커넥션풀로서 DBCP를 등록  -->
	<beans:bean id="ds" class="org.apache.commons.dbcp2.BasicDataSource">
	<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver" />
	<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
	<beans:property name="username" value="web"/>
	<beans:property name="password" value="web01"/>
	</beans:bean>
	<!-- MyBatis 본체를 등록 (커넥션을 제공하는 객체와 설정파일위치를 설정 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
 	 <beans:property name="dataSource" ref="ds" />
 	 <beans:property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
	</beans:bean>
<!--  SqlSessionTemplate : SqlSession 구현체로서, 스레드에 안전하고, -->
<!--  스프링트랜잭션에 따라서 커밋/롤백을 수행하고 -->
<!--  마이바티스 예외를 스프링 예외로 변환  -->
 <!-- <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> -->
 <!--  생성자의 첫번째 인자로 "sqlSessionFactory"라는 이름으로 스프링에 등록된 객체  -->
<!--  <beans:constructor-arg index="0" ref="sqlSessionFactory"/> -->
<!--  </beans:bean> -->
<!-- </beans:beans> -->
<!-- com.exam.exspring.member 패키지 아래에 존재하는 -->
<!-- 인터페이스를 찾아서, -->
<!-- 마이바티스를 실행하는 그 인터페이스의 구현체를 자동 생성하여 스프링에 등록 -->
<mybatis-spring:scan base-package="com.exam.exspring" annotation="org.apache.ibatis.annotations.Mapper"/>
</beans:beans>